{
    "contents" : "#Creando 2 poblaciones/individuos independientes con distribucion\n# de probabilidad de cada alelo siguiendo una beta(a,a)\n\nhybridsim<-function(Nmarker,Na,Nb,Nf1,Nbxa=Nf1, Nbxb=Nf1, type=\"selection\",hybrid=\"all\",Nsel=Nmarker*0.1,S=0,apa=0.5,apb=0.5){\n  if (Na==0 |Nb==0)\n    stop(\"at least 1 individuals in each parental population\")\n  if (Nf1==0)\n    stop(\"at least 2 F1 hybrids\")\n  \n  if (Na==0 |Nb==0)\n    stop(\"at least 1 individuals in each parental population\")\n  \n  if (type==\"neutral\"){\n    cat(\"########Neutral hybridization########\")\n    Nsel=Nmarker\n    S=0\n  }\n  #Crea matriz de individuos con todo 1\n  pa<-matrix( 1,1000,Nmarker)\n  #Crea la matriz con alelos siguiendo la probabilida de la beta\n  p1<-rbeta(Nmarker,apa,apa)\n  fa<-p1*(2-p1)\n  for (i in 1:Nmarker)\n    pa[,i]<-rbinom(1000,1,fa[i])\n  pasel<-pa[sample(nrow(pa), Na), ]\n  \n  \n  \n  \n  pb<-matrix(1,1000,Nmarker)\n  p2<-rbeta(Nmarker,apb,apb)\n  fb<-p2*(2-p2)\n  for (i in 1:Nmarker)\n    pb[,i]<-rbinom(1000,1,fb[i])\n  \n  pbsel<-pb[sample(nrow(pb), Nb), ]\n  \n  #Creamos los individuos F1 siguiendo un modelo neutral pero queremos seleccionar algunos alelos. Para ello fabricamos un numero grande de progenie y luego recogemos los individuos que tengan los fragmentos outlier donde outlier es un vector de alelos (M1,M2,...)\n  \n  \n  #Se calculas las frecuencias de lso parentales\n  \n  fa1000<-apply(pa,2,mean)\n  fb1000<-apply(pb,2,mean)\n  pa1000<-1-sqrt(1-fa1000)\n  pb1000<-1-sqrt(1-fb1000)\n  \n  sel<-sample(1:Nmarker,Nsel)\n  sel<-sort(sel)\n  \n  \n  markers<-paste(\"M\",seq(1,Nmarker,1),sep=\"\")\n  PA<-paste(\"PA\",seq(1,nrow(pasel),1),sep=\"\")\n  PB<-paste(\"PB\",seq(1,nrow(pbsel),1),sep=\"\")\n  \n  colnames(pasel)<-markers\n  rownames(pasel)<-PA\n  colnames(pbsel)<-markers\n  rownames(pbsel)<-PB\n  \n  simulation<-list(PA= pasel,PB= pbsel)\n  \n  if (any(hybrid == \"all\" | hybrid==\"F1\"))\n    {\n    #El modelo de introgresion neutra\n    neutralmodel<-function(x,y){x+y-(x*y)}\n    \n    ff1<-neutralmodel(pa1000,pb1000)\n    \n    progeny<-matrix(1,1000,Nmarker)\n    \n    for (i in 1:Nmarker)\n      progeny[,i]<-rbinom(1000,1,ff1[i])\n    \n    # Aqui es donde metemos seleccion. Para ello hay que definir sel \n    # que es un vector de longitud Nsel que equivale \n    # al numero de fragmentos a seleccionarse positivamente\n    ## Nsel<=Nmarker\n  \n    #Ya tenemos los fragmentos a seleccionar. Ahora vamos a seleccionar los fragmentos sel con una coeficiente de selecci??n S [1-10]\n    y2 <-(1-pa1000)*(1-pb1000)\n    y2[y2==0]<-0.00000000000000000000000000000000001\n    y2<-y2[sel]\n    selection<-function(z){\n      ((S+1)*z)/(((S+1)*z)+ y2)}\n    \n    fS<-selection(ff1[sel])\n    \n    selected<-matrix(1,1000,Nsel)\n    for (i in 1: Nsel)\n      selected[,i]<-rbinom(1000,1,fS[i])\n    progeny[,sel]<-selected\n    progeny[progeny==\"NaN\"]<-0\n    \n    #Submuestreamos al azar un Numero Nf1 de hibridos con seleccion sobre esos marker\n    f1sel<-progeny[sample(nrow(progeny), Nf1), ]\n    \n    #La ponemos bonita nombres de alelos e individuos\n\n    F1<-paste(\"F1\",seq(1,nrow(f1sel),1),sep=\"_\")\n    colnames(f1sel)<-markers\n    rownames(f1sel)<-F1\n    simulation <- c(simulation, list(F1= f1sel))\n  }\n  else {simulation <- c(simulation, list(F1= NA))}\n  \n  if (any(hybrid == \"all\" | hybrid==\"BxA\")){\n    \n    #El modelo de introgresion neutra\n    neutralmodelbxa<-function(x,y){\n      ((3*x)+y-(x^2)-(x*y))/2}\n    \n    fbxa<-neutralmodelbxa(pa1000,pb1000)\n    \n    progeny<-matrix(1,1000,Nmarker)\n    \n    for (i in 1:Nmarker)\n      progeny[,i]<-rbinom(1000,1,fbxa[i])\n    \n    # Aqui es donde metemos seleccion. Para ello hay que definir sel \n    # que es un vector de longitud Nsel que equivale \n    # al numero de fragmentos a seleccionarse positivamente\n    ## Nsel<=Nmarker\n\n    #Ya tenemos los fragmentos a seleccionar. Ahora vamos a seleccionar los fragmentos sel con una coeficiente de selecci??n S [1-10]\n    y2 <-((pa1000^2)-(3*(pa1000))- pb1000 + (pa1000*pb1000) + 2 )/2\n    y2[y2==0]<-0.00000000000000000000000000000000001\n    y2<-y2[sel]\n    selection<-function(z){\n      ((S+1)*z)/(((S+1)*z)+ y2)}\n    \n    fS<-selection(fbxa[sel])\n    \n    selected<-matrix(1,1000,Nsel)\n    for (i in 1: Nsel)\n      selected[,i]<-rbinom(1000,1,fS[i])\n    progeny[,sel]<-selected\n    progeny[progeny==\"NaN\"]<-0\n    \n    #Submuestreamos al azar un Numero Nbxa de hibridos con seleccion sobre esos marker\n    bxasel<-progeny[sample(nrow(progeny), Nbxa), ]\n    \n    #La ponemos bonita nombres de alelos e individuos\n\n    BxA<-paste(\"BxA\",seq(1,nrow(bxasel),1),sep=\"_\")\n\n    colnames(bxasel)<-markers\n    rownames(bxasel)<-BxA\n    simulation <- c(simulation, list(BxA= bxasel))\n    }\n  else {simulation <- c(simulation, list(BxA= NA))}\n  \n  if (any(hybrid == \"all\" | hybrid==\"BxB\")){\n    \n    #El modelo de introgresion neutra\n    neutralmodelbxb<-function(x,y){\n      ((3*y)+x-(y^2)-(x*y))/2}\n    \n    fbxb<-neutralmodelbxb(pa1000,pb1000)\n    \n    progeny<-matrix(1,1000,Nmarker)\n    \n    for (i in 1:Nmarker)\n      progeny[,i]<-rbinom(1000,1,fbxb[i])\n    \n    # Aqui es donde metemos seleccion. Para ello hay que definir sel \n    # que es un vector de longitud Nsel que equivale \n    # al numero de fragmentos a seleccionarse positivamente\n    ## Nsel<=Nmarker\n    sel<-sample(1:Nmarker,Nsel)\n    sel<-sort(sel)\n    #Ya tenemos los fragmentos a seleccionar. Ahora vamos a seleccionar los fragmentos sel con una coeficiente de selecci??n S [1-10]\n    y2 <-((pa1000^2)-(3*(pa1000))- pb1000 + (pa1000*pb1000) + 2 )/2\n    y2[y2==0]<-0.00000000000000000000000000000000001\n    y2<-y2[sel]\n    selection<-function(z){\n      ((S+1)*z)/(((S+1)*z)+ y2)}\n    \n    fS<-selection(fbxb[sel])\n    \n    selected<-matrix(1,1000,Nsel)\n    for (i in 1: Nsel)\n      selected[,i]<-rbinom(1000,1,fS[i])\n    progeny[,sel]<-selected\n    progeny[progeny==\"NaN\"]<-0\n    \n    #Submuestreamos al azar un Numero Nbxa de hibridos con seleccion sobre esos marker\n    bxbsel<-progeny[sample(nrow(progeny), Nbxb), ]\n    \n    #La ponemos bonita nombres de alelos e individuos\n\n    BxB<-paste(\"BxB\",seq(1,nrow(bxbsel),1),sep=\"_\")\n    \n    colnames(bxbsel)<-markers\n    rownames(bxbsel)<-BxB\n    \n    simulation<-c(simulation,list(BxB=bxbsel))\n  }\n  else {simulation <- c(simulation, list(BxB= NA))}\n  if (S==0) {sel= NA}\n  simulation<-c(simulation,list(SelMarkers=sel, S = S))\n  class(simulation) <- \"hybridsim\"\n  simulation\n}",
    "created" : 1363523480603.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2985089329",
    "id" : "D0B7ECDA",
    "lastKnownWriteTime" : 1363527328,
    "path" : "/media/Datos/BiologÃ­a/github/AFLPsim/funcionesfinales/simulations/hybridsim2.R",
    "properties" : {
    },
    "source_on_save" : true,
    "type" : "r_source"
}